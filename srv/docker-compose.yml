networks:
  web:
    name: web
  internal:
    name: internal

volumes:
  ts-webserver:
    driver: local
  portainer-data:
    name: portainer-data

services:
  ts-webserver:
    image: tailscale/tailscale:latest
    hostname: webserver
    environment:
      - TS_AUTHKEY=tskey-auth-kigrcTdLcL11CNTRL-SPAvMYYA6KTi3C1A1oiYJTMbwXBkLD36
      - TS_STATE_DIR=/var/lib/tailscale
    volumes:
      - /etc/ts-webserver:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped
  webserver:
      image: nginx
      network_mode: service:ts-webserver
      labels:
      - traefik.http.routers.nginx.tls.certresolver=ts
      - traefik.http.routers.nginx.tls.domains[0].main=webserver.unicorn-morpho.ts.net
      - traefik.http.services.nginx.loadbalancer.server.port=443
      - traefik.http.routers.nginx.entrypoints=websecure
      depends_on: 
        - ts-webserver
  traefik:
    image: "traefik:v3.0"
    container_name: "traefik-proxy"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=internal"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.address=:80"
      - "--certificatesresolvers.ts.tailscale=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /etc/traefik/traefik.yml:/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/run/tailscale/tailscaled.sock:/var/run/tailscale/tailscaled.sock:ro
    networks:
      - web
      - internal
  portainer:
    container_name: "portainer"
    image: portainer/portainer-ce:latest
    privileged: false
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.tls.certresolver=ts
      - traefik.http.routers.portainer.tls.domains[0].main=portainer.unicorn-morpho.ts.net
      - traefik.http.services.portainer.loadbalancer.server.port=9443
      - traefik.http.routers.portainer.entrypoints=websecure
    volumes:
      - portainer-data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
      - internal
# services:
#   reverse-proxy:
#     # The official v3 Traefik docker image
#     image: traefik:v3.0
#     # Enables the web UI and tells Traefik to listen to docker
#     command: --api.insecure=true --providers.docker
#     ports:
#       # The HTTP port
#       - "80:80"
#       # The Web UI (enabled by --api.insecure=true)
#       - "8080:8080"
#     volumes:
#       # So that Traefik can listen to the Docker events
#       - /var/run/docker.sock:/var/run/docker.sock
#   whoami:
#     # A container that exposes an API to show its IP address
#     image: traefik/whoami
#     labels:
#       - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
